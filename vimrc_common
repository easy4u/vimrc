" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" You can also specify a different font, overriding the default font 
if has('gui_gtk2')
    set guifont=Bitstream\ Vera\ Sans\ Mono\ 12
  else 
    set guifont=-misc-fixed-medium-r-normal--14-130-75-75-c-70-iso8859-1
endif

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

set tabstop=4
set expandtab
set shiftwidth=4

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup          " do not keep a backup file, use versions instead
else
  set backup            " keep a backup file
endif
set history=50          " keep 50 lines of command line history
set ruler               " show the cursor position all the time
set showcmd             " display incomplete commands
set incsearch           " do incremental searching

" Don't use Ex mode, use Q for formatting
map Q gq

" In many terminal emulators the mouse works just fine, thus enable it.
"set mouse=a

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent
  " indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif
else

  set smartcase
  set autoindent                " always set autoindenting on
  set smartindent
  set nocopyindent

endif " has("autocmd")


" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
                 \ | wincmd p | diffthis

set nu         " Turn on line numbering. Turn it off with "set nonu" 

" Wrap text instead of being on one line
set lbr

" Change colorscheme from default to delek
"colorscheme delek
colorscheme  desert

" Case insensitive search
set ic

" Highlight the current line
set cursorline

au BufRead,BufNewFile logcat.log* set filetype=logril
au BufRead,BufNewFile aplog* set filetype=logril
au BufRead,BufNewFile logcat-ril.log* set filetype=logril
au BufRead,BufNewFile *.log* set filetype=logril
